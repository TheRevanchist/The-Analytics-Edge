teamRank = c(1,2,3,3,4,4,4,4,5,5)
wins2012 = c(94, 88, 95, 88, 93, 94, 98, 97, 93, 94)
wins2013 = c(97, 97, 92, 93, 92, 96, 94, 96, 92, 90)
cor(teamRank, wins2012)
cor(teamRank, wins2013)
data(state)
statedata = cbind(data.frame(state.x77), state.abb, state.area, state.center,  state.division, state.name, state.region)
plot(statedata$x, statedata$y)
summary(statedata)
tapply(statedata$HS.Grad, statedata$state.region, mean)
boxplot(statedata$Murder~statedata$state.region)
NorthEast = subset(statedata, state.region == "Northeast")
Northeast
NorthEast$Murder
NorthEast
Model1 = lm(Income~., data = statedata)
Model1 = lm(LifeExp~., data = statedata)
Model1 = lm(Life.Exp~., data = statedata)
Model1
summary(Model1)
LinReg = lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data=statedata)
LinReg
plot(statedata$Income, statedata$Life.Exp)
model2 = step(LinReg)
summary(model2)
summary(statedata)
summary(LinReg)
sort(predict(LinReg))
which.min(statedata$Life.Exp)
sort(abs(model2$residuals))
songs = read.csv("songs.csv")
setwd("C:/Workbench/Online Courses/The Analytics Edge/Week 3")
songs = read.csv("songs.csv")
SongsTrain = subset(songs, year <= 2009)
SongsTest = subset(songs, year == 2010)
nonvars = c("year", "songtitle", "artistname", "songID", "artistID")
SongsTrain = SongsTrain[ , !(names(SongsTrain) %in% nonvars) ]
SongsTest = SongsTest[ , !(names(SongsTest) %in% nonvars) ]
SongsLog1 = glm(Top10 ~ ., data=SongsTrain, family=binomial)
summary(SongsLog1)
cor(SongsTrain)
SongsLog2 = glm(Top10 ~ . - loudness, data=SongsTrain, family=binomial)
summary(SongsLog2)
summary(SongsLog1)
SongsLog3 = glm(Top10 ~ . - loudness - energy, data=SongsTrain, family=binomial
)
SongsLog3 = glm(Top10 ~ .- energy, data=SongsTrain, family=binomial)
summary(SongsLog3)
summary(SongsLog2)
TestPrediction = predict(SongsLog3, newdata = SongsTest, type = "response")
table(SongsTest$Top10, TestPrediction >= 0.45)
(309+19)/373
table(SongsTest$Top10)
314/373
19/69
309/314
19/59
clear
clc
delete.response()
delete
rm(list = ls())
parole = read.csv("parole.csv")
table(parole$violator)
parole$state = as.factor(parole$state)
parole$crime = as.factor(parole$crime)
summary(parole$crime)
parole2 = read.csv("parole.cls")
parole2 = read.csv("parole.csv")
summary(parole2$crime)
table(parole2$crime)
set.seed(144)
library(caTools)
split = sample.split(parole$violator, SplitRatio = 0.7)
train = subset(parole, split == TRUE)
test = subset(parole, split == FALSE)
473/675
set.seed(100)
split = sample.split(parole$violator, SplitRatio = 0.7)
train = subset(parole, split == TRUE)
test = subset(parole, split == FALSE)
set.seed(144)
split = sample.split(parole$violator, SplitRatio = 0.7)
train = subset(parole, split == TRUE)
test = subset(parole, split == FALSE)
mod1 = glm(violator~., data = train, family = binomial)
mod1
summary(mod1)
0.0001756 * (-50)
-0.123886 * 3
0.0802954 * 12
exp(-4.2411574+0.3869904+0.8867192-0.00878-0.371658+0.9635448+0.6837143)
1/1.1825691
a = -4.2411574+0.3869904+0.8867192-0.00878-0.371658+0.9635448+0.6837143
a
exp(1.700627)
1/6.477381
TestPrediction = predict(mod1, newdata = test, type = "response")
summary(TextPrediction)
summary(TestPrediction)
table(test$violator, TestPrediction >= 0.5)
12/(12+11)
167/(167+12)
(167+12)/202
table(test$violator)
179/202
table(test$violator, TestPrediction >= 0.8)
181/202
table(test$violator, TestPrediction >= 0.6)
table(test$violator, TestPrediction >= 0.7)
table(test$violator, TestPrediction >= 0.55)
table(test$violator, TestPrediction >= 0.4)
table(test$violator, TestPrediction >= 0.45)
table(test$violator, TestPrediction >= 0.45)
rm(list = ls())
loan = read.csv("loans.csv")
table(loan$not.fully.paid)
1533/9578
summary(loan)
