teamRank = c(1,2,3,3,4,4,4,4,5,5)
wins2012 = c(94, 88, 95, 88, 93, 94, 98, 97, 93, 94)
wins2013 = c(97, 97, 92, 93, 92, 96, 94, 96, 92, 90)
cor(teamRank, wins2012)
cor(teamRank, wins2013)
data(state)
statedata = cbind(data.frame(state.x77), state.abb, state.area, state.center,  state.division, state.name, state.region)
plot(statedata$x, statedata$y)
summary(statedata)
tapply(statedata$HS.Grad, statedata$state.region, mean)
boxplot(statedata$Murder~statedata$state.region)
NorthEast = subset(statedata, state.region == "Northeast")
Northeast
NorthEast$Murder
NorthEast
Model1 = lm(Income~., data = statedata)
Model1 = lm(LifeExp~., data = statedata)
Model1 = lm(Life.Exp~., data = statedata)
Model1
summary(Model1)
LinReg = lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data=statedata)
LinReg
plot(statedata$Income, statedata$Life.Exp)
model2 = step(LinReg)
summary(model2)
summary(statedata)
summary(LinReg)
sort(predict(LinReg))
which.min(statedata$Life.Exp)
sort(abs(model2$residuals))
setwd("C:/Workbench/Online Courses/The Analytics Edge/Week 5")
emailsSparse$spam = as.factor(emailsSparse$spam)
set.seed(123)
spl = sample.split(emailsSparse$spam, SplitRatio = 0.7)
library(caTools)
spl = sample.split(emailsSparse$spam, SplitRatio = 0.7)
train = subset(emailsSparse, spl == TRUE)
test = subset(emailsSparse, spl == FALSE)
spamLog = glm(spam~., data = train, family = binomial)
summary(spamLog)
spamLog
predictTrain = predict(spamLog)
predictTrain
predictTrain = predict(spamLog, type = "response")
predictTrain
table(predictTrain < 0.00001)
3046/(3046+964)
table(predictTrain > 0.99999)
(3046
964) - (3046+954)
(3046+954)-(3046+954)
(3046+964)-(3046+954)
spamCART = rpart(spam~., data=train, method="class")
spamCART = rpart(spam~., data=train, method="class")
library(rpart)
library(rpart.plot)
spamCART = rpart(spam~., data=train, method="class")
set.seed(123)
spamRF = randomForest(spam~., data=train)
library(randomForest)
spamRF = randomForest(spam~., data=train)
predTrainLog = predict(spamLog, type="response")
predTrainCART = predict(spamCART)[,2]
predTrainRF = predict(spamRF, type="prob")[,2]
prp(spamCART)
table(test$spam, predTrainLog >= 0.5)
predTestLog = predict(spamLog, newdata = test, type = "response")
table(test$spam, predTrainLog >= 0.5)
table(test$spam, predTestLog >= 0.5)
(1257+376)/nrow(test)
table(train$spam, predict.spamLog >0.5)
table(train$spam, predTrainLog >= 0.5)
libraryROCR
library(ROCR)
table(train$spam, predTrainCART)
PredictTrainCart = predict(spamCart, newdata = train, type = "class")
PredictTrainCart = predict(spamCART, newdata = train, type = "class")
table(train$spam, predTrainCART)
table(train$spam, predTrainCART > 0.5)
(2885+894)/nrow(train)
predictionTrainCART = prediction(predTrainCART, train$spam)
as.numeric(performance(predictionTrainCART, "auc")@y.values)
table(train$spam, predTrainRF > 0.5)
(3013+914)/nrow(train)
predictionTrainRF = prediction(predTrainRF, train$spam)
as.numeric(performance(predictionTrainRF, "auc")@y.values)
predTestLog = predict(spamRF, newdata = train, type = "class")
table(test$spam, predTestLog >= 0.5)
predTestLog = predict(spamRF, newdata = test, type = "class")
table(test$spam, predTestLog)
(1290+385)/nrow(test)
predTestLog = predict(spamLog, newdata=test, type="response")
predTestCART = predict(spamCART, newdata=test)[,2]
predTestRF = predict(spamRF, newdata=test, type="prob")[,2]
predictionTestLog = prediction(predTestLog, test$spam)
as.numeric(performance(predictionTestLog, "auc")@y.values)
table(test$spam, predTestCART >= 0.5)
(1228+386)/nrow(test)
predictionTestCART = prediction(predTestCART, test$spam)
as.numeric(performance(predictionTestCART, "auc")@y.values)
table(test$spam, predTestRF >= 0.5)
(1290+386)/nrow(test)
predictionTestRF = prediction(predTestRF, test$spam)
as.numeric(performance(predictionTestRF, "auc")@y.values)
